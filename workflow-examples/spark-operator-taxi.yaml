apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: taxi-trip
  namespace: spark-team-a
spec:
  type: Python
  sparkVersion: "3.2.1"
  pythonVersion: "3"
  mode: cluster
  image: "public.ecr.aws/r1l5w1y9/spark-operator:3.2.1-hadoop-3.3.1-java-11-scala-2.12-python-3.8-latest"
  imagePullPolicy: IfNotPresent
  mainApplicationFile: "s3a://etl-spark-eks-20240125113027649200000002/taxi-trip/scripts/pyspark-taxi-trip.py" # MainFile is the path to a bundled JAR, Python, or R file of the application
  arguments:
    - "s3a://etl-spark-eks-20240125113027649200000002/taxi-trip/input/"
    - "s3a://etl-spark-eks-20240125113027649200000002/taxi-trip/output/"
  hadoopConf:
    "fs.s3a.aws.credentials.provider": "com.amazonaws.auth.WebIdentityTokenCredentialsProvider"
    "fs.s3a.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
    "mapreduce.fileoutputcommitter.algorithm.version": "2"
  sparkConf:
    "spark.local.dir": "/data1"
    "spark.speculation": "false"
    "spark.network.timeout": "2400"
    "spark.hadoop.fs.s3a.connection.timeout": "1200000"
    "spark.hadoop.fs.s3a.path.style.access": "true"
    "spark.hadoop.fs.s3a.connection.maximum": "200"
    "spark.hadoop.fs.s3a.fast.upload": "true"
    "spark.hadoop.fs.s3a.readahead.range": "256K"
    "spark.hadoop.fs.s3a.input.fadvise": "random"
    "spark.hadoop.fs.s3a.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
    # Spark Event logs
    "spark.eventLog.enabled": "true"
    "spark.eventLog.dir": "s3a://etl-spark-eks-20240125113027649200000002/spark-event-logs"
    "spark.eventLog.rolling.enabled": "true"
    "spark.eventLog.rolling.maxFileSize": "64m"
  restartPolicy:
    type: OnFailure
    onFailureRetries: 3
    onFailureRetryInterval: 10
    onSubmissionFailureRetries: 5
    onSubmissionFailureRetryInterval: 20
  volumes: # using NVMe instance storage mounted on /mnt/k8s-disks
    - name: spark-local-dir-1
      hostPath:
        path: /mnt/k8s-disks
        type: Directory
  driver:
    volumeMounts: # Points to InstanceStore 150GB NVMe SSD for shuffle spill over from memory
      - name: spark-local-dir-1
        mountPath: /data1
        readOnly: false
    initContainers:
      - name: volume-permissions
        image: public.ecr.aws/y4g4v0z7/busybox
        command: ["sh", "-c", "chown -R 185 /mnt/k8s-disks"]
        volumeMounts:
          - mountPath: "/mnt/k8s-disks"
            name: "spark-local-dir-1"
    cores: 1
    coreLimit: "1200m"
    memory: "4g"
    memoryOverhead: "4g"
    serviceAccount: spark-team-a
    nodeSelector:
      NodeGroupType: "SparkComputeOptimized"
      karpenter.sh/capacity-type: "on-demand"
    tolerations:
      - key: "spark-compute-optimized"
        operator: "Exists"
        effect: "NoSchedule"
    labels:
      version: 3.2.1
  #    annotations:
  #      yunikorn.apache.org/schedulingPolicyParameters: "placeholderTimeoutSeconds=30 gangSchedulingStyle=Hard"
  #      yunikorn.apache.org/task-group-name: "spark-driver"
  # minMember should match with driver and executor instances
  # minResource cpu and memory should match with driver and executor cpu and memory
  #      yunikorn.apache.org/task-groups: |-
  #        [{
  #            "name": "spark-driver",
  #            "minMember": 1,
  #            "minResource": {
  #              "cpu": "1200m",
  #              "memory": "14Gi"
  #            },
  #            "nodeSelector": {
  #              "NodeGroupType": "SparkComputeOptimized",
  #              "karpenter.sh/capacity-type": "on-demand"
  #            },
  #            "tolerations": [{"key": "spark-compute-optimized", "operator": "Exists", "effect": "NoSchedule"}]
  #          },
  #          {
  #            "name": "spark-executor",
  #            "minMember": 4,
  #            "minResource": {
  #              "cpu": "1200m",
  #              "memory": "14Gi"
  #            },
  #            "nodeSelector": {
  #              "NodeGroupType": "SparkComputeOptimized",
  #              "karpenter.sh/capacity-type": "spot"
  #            },
  #            "tolerations": [{"key": "spark-compute-optimized", "operator": "Exists", "effect": "NoSchedule"}]
  #        }]
  executor:
    podSecurityContext:
      fsGroup: 185
    volumeMounts:
      - name: spark-local-dir-1
        mountPath: /data1
        readOnly: false
    initContainers:
      - name: volume-permissions
        image: public.ecr.aws/y4g4v0z7/busybox
        command: ["sh", "-c", "chown -R 185 /mnt/k8s-disks"]
        volumeMounts:
          - mountPath: "/mnt/k8s-disks"
            name: "spark-local-dir-1"
    cores: 1
    coreLimit: "1200m"
    instances: 4
    memory: "4g"
    memoryOverhead: "4g"
    serviceAccount: spark-team-a
    labels:
      version: 3.2.1
    #    annotations:
    #      yunikorn.apache.org/task-group-name: "spark-executor"
    nodeSelector:
      NodeGroupType: "SparkComputeOptimized"
      karpenter.sh/capacity-type: "spot"
    tolerations:
      - key: "spark-compute-optimized"
        operator: "Exists"
        effect: "NoSchedule"
